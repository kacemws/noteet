[{"C:\\DevMobile\\web-React\\noteet\\src\\index.tsx":"1","C:\\DevMobile\\web-React\\noteet\\src\\reportWebVitals.ts":"2","C:\\DevMobile\\web-React\\noteet\\src\\App.tsx":"3","C:\\DevMobile\\web-React\\noteet\\src\\Components\\SideMenu.tsx":"4","C:\\DevMobile\\web-React\\noteet\\src\\Components\\Panel.tsx":"5","C:\\DevMobile\\web-React\\noteet\\src\\Components\\Card.tsx":"6","C:\\DevMobile\\web-React\\noteet\\src\\utils\\Note.ts":"7","C:\\DevMobile\\web-React\\noteet\\src\\utils\\random.ts":"8","C:\\DevMobile\\web-React\\noteet\\src\\Views\\NoteView.tsx":"9","C:\\DevMobile\\web-React\\noteet\\src\\Views\\SignIn.tsx":"10","C:\\DevMobile\\web-React\\noteet\\src\\Components\\image.tsx":"11","C:\\DevMobile\\web-React\\noteet\\src\\Views\\Signup.tsx":"12","C:\\DevMobile\\web-React\\noteet\\src\\api\\connect.instance.ts":"13","C:\\DevMobile\\web-React\\noteet\\src\\api\\axios.ts":"14","C:\\DevMobile\\web-React\\noteet\\src\\Components\\Loader.tsx":"15","C:\\DevMobile\\web-React\\noteet\\src\\api\\notes.instance.ts":"16"},{"size":478,"mtime":1610963037718,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1610904671475,"results":"19","hashOfConfig":"18"},{"size":3943,"mtime":1611585252856,"results":"20","hashOfConfig":"18"},{"size":4066,"mtime":1611338490142,"results":"21","hashOfConfig":"18"},{"size":1159,"mtime":1611332752149,"results":"22","hashOfConfig":"18"},{"size":2884,"mtime":1611434794546,"results":"23","hashOfConfig":"18"},{"size":280,"mtime":1611262198417,"results":"24","hashOfConfig":"18"},{"size":323,"mtime":1611262182122,"results":"25","hashOfConfig":"18"},{"size":1795,"mtime":1611587448940,"results":"26","hashOfConfig":"18"},{"size":5329,"mtime":1611581700559,"results":"27","hashOfConfig":"18"},{"size":298,"mtime":1611436755587,"results":"28","hashOfConfig":"18"},{"size":10094,"mtime":1611583975016,"results":"29","hashOfConfig":"18"},{"size":389,"mtime":1611576173382,"results":"30","hashOfConfig":"18"},{"size":2090,"mtime":1611584103712,"results":"31","hashOfConfig":"18"},{"size":219,"mtime":1611584700384,"results":"32","hashOfConfig":"18"},{"size":722,"mtime":1611577318161,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ovkqxo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\DevMobile\\web-React\\noteet\\src\\index.tsx",[],["70","71"],"C:\\DevMobile\\web-React\\noteet\\src\\reportWebVitals.ts",[],"C:\\DevMobile\\web-React\\noteet\\src\\App.tsx",["72","73","74","75","76","77","78","79"],"C:\\DevMobile\\web-React\\noteet\\src\\Components\\SideMenu.tsx",[],"C:\\DevMobile\\web-React\\noteet\\src\\Components\\Panel.tsx",[],"C:\\DevMobile\\web-React\\noteet\\src\\Components\\Card.tsx",["80","81","82"],"import { useEffect, useState } from \"react\";\r\nimport trash from \"../Assets/trash.svg\";\r\nimport save from \"../Assets/save.svg\";\r\nimport \"../Styles/Components/Card.scss\";\r\nimport { Note } from \"../utils/Note\";\r\n\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\ninterface props {\r\n  note: Note;\r\n  index: number;\r\n  updateNote: (note: Note, index: number) => void;\r\n  deleteNote: (index: number) => void;\r\n}\r\nexport const Card: React.FC<props> = ({\r\n  note,\r\n  index,\r\n  updateNote,\r\n  deleteNote,\r\n  ...rest\r\n}) => {\r\n  const [animate, setAnimate] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  useEffect(() => {\r\n    setValue(note.note);\r\n    if (index == 0) {\r\n      console.log(\"will animate \" + note.color + \" : \" + index);\r\n\r\n      setAnimate(false);\r\n      setTimeout(() => {\r\n        setAnimate(true);\r\n      }, 100);\r\n    } else {\r\n      console.log(\"changed index\");\r\n    }\r\n  }, [note]);\r\n  const firstProp = useSpring({\r\n    marginLeft: animate ? \"1rem\" : \"-12.5rem\",\r\n    width: animate ? 310 : 0,\r\n    height: animate ? 310 : 0,\r\n    opacity: animate ? 1 : 0,\r\n    backgroundColor: note.color,\r\n  });\r\n\r\n  const deleteButtonProps = useSpring({\r\n    opacity: note?.note ? 1 : 0,\r\n    height: note?.note ? \"3rem\" : \"0rem\",\r\n    width: note?.note ? \"3rem\" : \"0rem\",\r\n  });\r\n\r\n  const cardProps = useSpring({\r\n    backgroundColor: note.color,\r\n  });\r\n  return (\r\n    <animated.div\r\n      key={note.id}\r\n      className=\"note\"\r\n      style={index ? cardProps : firstProp}\r\n    >\r\n      <textarea\r\n        placeholder=\"Type your note\"\r\n        value={value}\r\n        onChange={({ target }) => {\r\n          setValue(target.value);\r\n        }}\r\n      ></textarea>\r\n      <div className=\"footer\">\r\n        <div className=\"date\">\r\n          <span>\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"2-digit\",\r\n            }).format(Date.parse(note.date.toDateString()))}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"edit\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {note.note ? (\r\n            <animated.button\r\n              style={deleteButtonProps}\r\n              onClick={(_) => {\r\n                deleteNote(index);\r\n              }}\r\n            >\r\n              <animated.img src={trash} alt=\"delete Icon\" />\r\n            </animated.button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <button\r\n            disabled={value == note.note || !value}\r\n            onClick={(_) => {\r\n              updateNote(new Note(note.color, value), index);\r\n            }}\r\n          >\r\n            <animated.img src={save} alt=\"Save Icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n","C:\\DevMobile\\web-React\\noteet\\src\\utils\\Note.ts",[],"C:\\DevMobile\\web-React\\noteet\\src\\utils\\random.ts",[],"C:\\DevMobile\\web-React\\noteet\\src\\Views\\NoteView.tsx",["83","84"],"C:\\DevMobile\\web-React\\noteet\\src\\Views\\SignIn.tsx",["85"],"import React, { useState } from \"react\";\r\nimport \"../Styles/Views/SignIn.scss\";\r\nimport LandingImage from \"../Components/image\";\r\n// import logo from \"../Assets/neo.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../api/connect.instance\";\r\nimport Cookies from \"js-cookie\";\r\nimport { setAuthToken } from \"../api/axios\";\r\n\r\nexport default function Signin() {\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setError } = useForm({\r\n    mode: \"onChange\",\r\n  }); //settings for react hook form\r\n\r\n  const [innerLoading, setInnerLoading] = useState(false); // to know wheter we are fetching data or not\r\n  const onSubmit = async (data: any) => {\r\n    if (!innerLoading) {\r\n      setInnerLoading(true);\r\n      try {\r\n        const answ = await login(data);\r\n        console.log(answ.data);\r\n        var in15minutes = new Date(new Date().getTime() + 900000);\r\n        Cookies.set(\"accessToken\", answ.data.accessToken, {\r\n          expires: in15minutes,\r\n        });\r\n        localStorage.setItem(\"refreshToken\", answ.data.refreshToken);\r\n        setAuthToken(answ.data.accessToken);\r\n      } catch (err) {\r\n        setInnerLoading(false);\r\n        if (err?.response?.status == 400) {\r\n          setError(\"email\", {\r\n            type: \"manual\",\r\n            message: \"Email/password combo not found\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <div className=\"container\">\r\n        <div className=\"left-part\">\r\n          <div className=\"header\">\r\n            {/* <img className=\"logo\" src={logo} alt=\"neo's logo\" /> */}\r\n            {/* Noteet */}\r\n          </div>\r\n          <div className=\"content\">\r\n            <LandingImage />\r\n          </div>\r\n          <div className=\"greetings legend\">\r\n            <h1\r\n              style={{\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              Noteet\r\n            </h1>\r\n            <h3>Manage all your notes with style and in one place</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-part\">\r\n          <div className=\"right-part-inner\">\r\n            {/*Header*/}\r\n            <header>\r\n              {/* <img className=\"logo\" src={logo} alt=\"neo's logo\" /> */}\r\n            </header>\r\n            {/*Header*/}\r\n\r\n            {/*Title*/}\r\n            <div className=\"greetings\">\r\n              <h1>Welcome</h1>\r\n              <h3>\r\n                New?{\" \"}\r\n                <span\r\n                  className=\"highlited\"\r\n                  onClick={(_) => {\r\n                    if (!innerLoading) history.push(\"sign-up\");\r\n                  }}\r\n                >\r\n                  Signup !\r\n                </span>\r\n              </h3>\r\n            </div>\r\n            {/*Title*/}\r\n\r\n            {/*Form*/}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              {/*Username field*/}\r\n              <div className=\"input-container\">\r\n                <label className=\"label\" htmlFor=\"email\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"input\"\r\n                  style={{\r\n                    borderColor: errors.email && \"red\",\r\n                  }}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  ref={register({\r\n                    required: true,\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                      message: \"Entered value does not match email format\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.email && (\r\n                  <div className=\"error\">\r\n                    {errors.email.type === \"manual\"\r\n                      ? errors?.email?.message\r\n                      : errors?.email?.message ?? \"Invalid data\"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/*Username field*/}\r\n\r\n              {/*Password field*/}\r\n              <div className=\"input-container\">\r\n                <label className=\"label\" htmlFor=\"password\">\r\n                  <div>Password</div>\r\n                  {/* <div className=\"forgot-password\">Forgot password ?</div> */}\r\n                </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  ref={register({\r\n                    required: true,\r\n                    minLength: 8,\r\n                  })}\r\n                  style={{\r\n                    borderColor: errors.password && \"red\",\r\n                  }}\r\n                />\r\n                {errors.password && <div className=\"error\">Invalid data</div>}\r\n              </div>\r\n              {/*Password field*/}\r\n\r\n              <div className=\"button\">\r\n                <button className=\"submit-button\" type=\"submit\">\r\n                  Signin\r\n                </button>\r\n                {innerLoading && (\r\n                  <div className=\"overlay\">\r\n                    <div className=\"spinner\"></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </form>\r\n            {/*Form*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\DevMobile\\web-React\\noteet\\src\\Components\\image.tsx",["86"],"import React from \"react\";\r\nimport landingImage from \"../Assets/landing-image.svg\";\r\nexport default function LandingImage() {\r\n  return (\r\n    <>\r\n      <img\r\n        src={landingImage}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\DevMobile\\web-React\\noteet\\src\\Views\\Signup.tsx",["87","88"],"C:\\DevMobile\\web-React\\noteet\\src\\api\\connect.instance.ts",[],"C:\\DevMobile\\web-React\\noteet\\src\\api\\axios.ts",["89"],"C:\\DevMobile\\web-React\\noteet\\src\\Components\\Loader.tsx",[],"C:\\DevMobile\\web-React\\noteet\\src\\api\\notes.instance.ts",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":22,"column":60,"nodeType":"96","messageId":"97","endLine":22,"endColumn":62},{"ruleId":"94","severity":1,"message":"95","line":32,"column":19,"nodeType":"96","messageId":"97","endLine":32,"endColumn":21},{"ruleId":"94","severity":1,"message":"98","line":33,"column":20,"nodeType":"96","messageId":"97","endLine":33,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":64,"column":6,"nodeType":"101","endLine":64,"endColumn":8,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"98","line":74,"column":25,"nodeType":"96","messageId":"97","endLine":74,"endColumn":27},{"ruleId":"94","severity":1,"message":"98","line":79,"column":38,"nodeType":"96","messageId":"97","endLine":79,"endColumn":40},{"ruleId":"94","severity":1,"message":"95","line":82,"column":19,"nodeType":"96","messageId":"97","endLine":82,"endColumn":21},{"ruleId":"94","severity":1,"message":"98","line":90,"column":13,"nodeType":"96","messageId":"97","endLine":90,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":26,"column":15,"nodeType":"96","messageId":"97","endLine":26,"endColumn":17},{"ruleId":"99","severity":1,"message":"103","line":36,"column":6,"nodeType":"101","endLine":36,"endColumn":12,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"95","line":98,"column":29,"nodeType":"96","messageId":"97","endLine":98,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":45,"column":40,"nodeType":"96","messageId":"97","endLine":45,"endColumn":42},{"ruleId":"94","severity":1,"message":"95","line":33,"column":35,"nodeType":"96","messageId":"97","endLine":33,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":6,"column":7,"nodeType":"111","endLine":12,"endColumn":9},{"ruleId":"94","severity":1,"message":"95","line":40,"column":35,"nodeType":"96","messageId":"97","endLine":40,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":250,"column":52,"nodeType":"96","messageId":"97","endLine":250,"endColumn":54},{"ruleId":"94","severity":1,"message":"98","line":54,"column":22,"nodeType":"96","messageId":"97","endLine":54,"endColumn":24},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkCookie' and 'interval'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["115"],"@typescript-eslint/no-unused-vars","'selected' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [checkCookie, interval]",{"range":"120","text":"121"},"Update the dependencies array to be: [index, note]",{"range":"122","text":"123"},[2416,2418],"[checkCookie, interval]",[912,918],"[index, note]"]